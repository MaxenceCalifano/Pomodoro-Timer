{"version":3,"sources":["App.js","Components/Button.js","Components/Controls.js","reportWebVitals.js","index.js"],"names":["countDown","Button","props","id","onClick","modifyLength","className","operator","Controls","state","isMoving","onMouseEnter","setState","onMouseLeave","this","timerControl","controlName","React","Component","App","timerOffColor","breakColor","startStop","bind","decr","reset","currentTimer","document","body","style","backgroundColor","sessionOrBreak","setTimerOncolor","minutesLeft","secondesLeft","getElementById","play","decrementSessionOrBreak","decrementTime","playPause","onOff","clearInterval","setTimerOffColor","setInterval","sound","pause","resetBkgColor","currentTime","textAlign","decrement","breakLength","increment","sessionLength","concat","xmlns","height","viewBox","width","fill","d","marginLeft","src","type","preload","el","querySelector","ReactDOM","render","connect","dispatch","buttonId","payload","decrementActionCreator","incrementActionCreator","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","window","__REDUX_DEVTOOLS_EXTENSION__","StrictMode"],"mappings":"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","file":"static/js/main.32c42c12.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { connect } from \"react-redux\";\nimport Button from \"./Components/Button.js\";\nimport Controls from \"./Components/Controls\";\nimport \"./index.css\";\nlet countDown;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.startStop = this.startStop.bind(this);\n    this.decr = this.decr.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  \n  timerOffColor = \"rgb(334, 100, 100)\";\n  breakColor = \"rgb(134, 200, 115)\";\n\n  setTimerOncolor() {\n    if (this.props.currentTimer === \"Session\") {\n      document.body.style.backgroundColor = \"rgb(134, 118, 239)\";\n    } else {\n      document.body.style.backgroundColor = this.breakColor;\n    }\n  }\n  setTimerOffColor() {\n    document.body.style.backgroundColor = this.timerOffColor;\n  }\n  resetBkgColor() {\n    document.body.style.backgroundColor = \" rgb(200, 239, 239)\";\n  }\n  decrementSessionOrBreak() { //choose wich timer to decrement\n    this.props.sessionOrBreak();\n     this.setTimerOncolor();\n  }\n  decr() {\n    if (this.props.minutesLeft === 0 && this.props.secondesLeft === 0) {\n      document.getElementById(\"beep\").play();\n      this.decrementSessionOrBreak();\n    } else {\n      this.props.decrementTime();\n    }\n  }\n\n  startStop() {\n    this.props.playPause();\n    if (this.props.onOff) {\n      clearInterval(countDown);\n      this.setTimerOffColor();\n      //repasser onOff en false\n    } else {\n      countDown = setInterval(this.decr, 1000);\n      this.setTimerOncolor();\n    }\n  }\n  reset() {\n    if (this.props.onOff) {\n      this.startStop();\n    }\n    this.props.reset();\n    \n    let sound = document.getElementById(\"beep\");\n    sound.pause();\n    this.resetBkgColor();\n    sound.currentTime = 0;\n  }\n \n  render() {\n    return (\n      <div id=\"box\">\n        <h1 style={{ textAlign: \"center\" }}>Pomodoro Timer </h1>\n        <div id=\"titles\">\n          <p id=\"break-label\">Break Length</p>\n          <p id=\"session-label\">Session Length</p>\n        </div>\n\n        <div id=\"container\">\n          <Button\n            id=\"break-decrement\"\n            operator=\"-\"\n            modifyLength={this.props.decrement}\n          />\n\n          <p id=\"break-length\">{this.props.breakLength}</p>\n\n          <Button\n            id=\"break-increment\"\n            operator=\"+\"\n            modifyLength={this.props.increment}\n          />\n\n          <Button\n            id=\"session-decrement\"\n            operator=\"-\"\n            modifyLength={this.props.decrement}\n          />\n\n          <p id=\"session-length\">{this.props.sessionLength}</p>\n\n          <Button\n            id=\"session-increment\"\n            operator=\"+\"\n            modifyLength={this.props.increment}\n          />\n        </div>\n        <div id=\"timer\">\n          <p id=\"timer-label\" style={{ textAlign: \"center\" }}>\n            {this.props.currentTimer}\n          </p>\n          <p id=\"time-left\" style={{ textAlign: \"center\" }}>\n            {this.props.minutesLeft > 9\n              ? this.props.minutesLeft\n              : \"0\".concat(this.props.minutesLeft)}\n            :\n            {this.props.secondesLeft > 9\n              ? this.props.secondesLeft\n              : \"0\".concat(this.props.secondesLeft)}\n          </p>\n          <div style={{ textAlign: \"center\" }}>\n            <Controls\n              id=\"start_stop\"\n              timerControl={this.startStop}\n              controlName={\n                <div>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#fff\">\n                    <path\n                        d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                    <path d=\"M10 8.64L15.27 12 10 15.36V8.64M8 5v14l11-7L8 5z\"\n                    />\n                  </svg>\n                  <svg style ={{marginLeft: -10}}xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#fff\">\n                    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n                    <path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\"/>\n                  </svg>\n                </div>\n              }\n            />\n            <Controls\n              id=\"reset\"\n              timerControl={this.reset}\n              controlName={<svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#FFFFFF\"><g><rect fill=\"none\" height=\"24\" width=\"24\"/><rect fill=\"none\" height=\"24\" width=\"24\"/><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g/><path d=\"M12,5V1L7,6l5,5V7c3.31,0,6,2.69,6,6s-2.69,6-6,6s-6-2.69-6-6H4c0,4.42,3.58,8,8,8s8-3.58,8-8S16.42,5,12,5z\"/></g></svg>}\n            />\n          </div>\n\n         <audio\n            id=\"beep\"\n           src='http://old.minford.k12.oh.us/WebsiteGraphics/backgrounds/GraphicsFromDriveR/sounds/SoundEffects/GONG.WAV'\n           type=\"audio/mpeg\"\n           preload=\"auto\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst decrementActionCreator = (buttonId) => {\n  return {\n    type: 'DECREMENT',\n    payload: buttonId\n  }\n}\nconst incrementActionCreator = (buttonId) => {\n  return {\n    type: 'INCREMENT',\n    payload: buttonId\n  }\n}\nconst resetActionCreator = () => {\n  return {\n    type: 'RESET'\n    }\n  }\nconst playPauseActionCreator = () => {\n    return {\n      type: 'PLAY_PAUSE'\n    }\n}\nconst decrementTimeActionCreator = () => {\n  return {\n    type: 'DECREMENT_TIME'\n  }\n}\nconst sessionOrBreakAcionCreator = () => {\n  return {\n    type: 'SESSION_OR_BREAK'\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    decrement : (buttonId) => {\n      dispatch(decrementActionCreator(buttonId));\n    },\n    increment : (buttonId) => {\n      dispatch(incrementActionCreator(buttonId));\n    },\n    reset : () => {\n      dispatch(resetActionCreator())\n    },\n    playPause : () => {\n      dispatch(playPauseActionCreator())\n    },\n    decrementTime : () => {\n      dispatch(decrementTimeActionCreator())\n    },\n    sessionOrBreak : () => {\n      dispatch(sessionOrBreakAcionCreator())\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    breakLength: state.breakLength,\n    sessionLength: state.sessionLength,\n    minutesLeft: state.minutesLeft,\n    secondesLeft: state.secondesLeft,\n    onOff: state.onOff,\n    currentTimer : state.currentTimer\n  }\n}\nconst el = document.querySelector(\"#root\");\nReactDOM.render(<App />, el);\nexport default connect(mapStateToProps,mapDispatchToProps)(App);","import React from \"react\";\r\n\r\n const Button = (props) => {\r\n    return(\r\n      <button id={props.id} \r\n      onClick={() => props.modifyLength(props.id)}\r\n      className=\"button\">\r\n        {props.operator}\r\n      </button>\r\n    );\r\n  };\r\n  export default Button;","import React from \"react\";\r\n\r\n\r\nexport default class Controls extends React.Component {\r\n  state = {\r\n    isMoving: false\r\n  };\r\n  render() {\r\n    return (\r\n      <button onMouseEnter={ () => this.setState({isMoving:!this.state.isMoving}) } onMouseLeave={ () => this.setState({isMoving:!this.state.isMoving})} id={this.props.id} \r\n      onClick={this.props.timerControl}\r\n      className= \"controls\"/* {this.state.isMoving ? \r\n        this.props.id ==\"start_stop\" ? controls_start_stop\" : \"\" \r\n        : \"\"} */\r\n      >\r\n        {this.props.controlName}\r\n      </button>\r\n    );\r\n  };\r\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\n\nconst initialState = {\n  breakLength: 5,\n  sessionLength: 25,\n  minutesLeft: 25,\n  secondesLeft: 0,\n  onOff: false,\n  currentTimer: \"Session\"\n}\n\nconst pomodoroReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'DECREMENT':\n      if(action.payload === \"break-decrement\")\n        {\n          if (state.breakLength > 1) {\n            return {\n              ...state,\n              breakLength: state.breakLength - 1\n            }\n          } else return state;\n        } else {\n          if (state.sessionLength > 1) {\n            return {\n              ...state,\n              sessionLength: state.sessionLength - 1,\n              minutesLeft: state.minutesLeft - 1\n            }\n          } else return state;\n        }\n      break;\n    case 'INCREMENT':\n    if(action.payload ===\"break-increment\") {\n      if (state.breakLength < 60) {\n        return {\n          ...state,\n          breakLength: state.breakLength + 1\n        }\n      } else return state;\n    } else {\n      if (state.sessionLength < 60) {\n        return {\n          ...state,\n          sessionLength: state.sessionLength + 1,\n          minutesLeft: state.minutesLeft + 1\n        }\n      } else return state;\n    }    \n      break;\n    case 'RESET':\n      return {\n        ...initialState\n      }\n      break;\n    case 'PLAY_PAUSE':\n      if (state.onOff) {\n        return {\n          ...state,\n          onOff: false\n        }\n      } else {\n        return {\n          ...state,\n          onOff: true\n        }\n      }\n      break;\n    case 'DECREMENT_TIME':\n      if (state.secondesLeft === 0) {\n        return {\n          ...state,\n          minutesLeft: state.minutesLeft - 1,\n          secondesLeft: 59\n        }\n      } else {\n        return {\n          ...state,\n          secondesLeft: state.secondesLeft - 1\n        }\n      }\n    case 'SESSION_OR_BREAK':\n      if (state.currentTimer === \"Session\") {\n        return {\n          ...state,\n          minutesLeft: state.breakLength,\n          currentTimer: \"break\"\n        }\n      } else {\n        return {\n          ...state,\n          minutesLeft: state.sessionLength,\n          currentTimer: \"Session\"\n        }\n      }\n    default: return state;\n      break;\n  }\n}\n\nconst store = createStore(pomodoroReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}